# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 检查 runner 信息，判断是否是 GitHub 官方托管 runner
      - name: Check runner info
        id: check_runner
        run: |
          echo "Runner OS: $RUNNER_OS"
          echo "Runner name: $RUNNER_NAME"
          # 如果不是常见的官方 Ubuntu 镜像，比如 ubuntu-20.04 / ubuntu-22.04 / ubuntu-latest 等
          # 可以自己写一些逻辑去判断。这里只是示例输出。
          # 也可以把检测结果 echo "::set-output name=is_self_hosted::true" 并在后续用 steps.check_runner.outputs.is_self_hosted 判断。
      
      # 如果是 GitHub 官方托管 runner，则可以直接使用 ruby/setup-ruby
      # 如果是 self-hosted，则需要自行安装 Ruby
      - name: Setup Ruby (for GitHub-hosted runner)
        if: startsWith(matrix.os, 'ubuntu') OR runner.os == 'Linux'  # 仅示例条件
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0
      
      - name: Install Ruby with ruby-build (if self-hosted)
        if: ${{ false }}  # 仅示例：在这里改写为检测条件，例如 steps.check_runner.outputs.is_self_hosted == 'true'
        run: |
          # 如果是自建（self-hosted）runner，需要先安装 ruby-build、依赖库等
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev libreadline-dev zlib1g-dev curl git

          # 假设已装好 ruby-build，或直接从源码编译安装：
          # git clone https://github.com/rbenv/ruby-build.git
          # (cd ruby-build && sudo ./install.sh)

          # 指定安装目录到 /opt/hostedtoolcache/Ruby/3.1.4/x64 仅作示例
          # 也可以根据你需要的 Ruby 版本进行修改
          mkdir -p /opt/hostedtoolcache/Ruby/3.1.4/x64
          ruby-build 3.1.4 /opt/hostedtoolcache/Ruby/3.1.4/x64

          # 标记编译完成
          touch /opt/hostedtoolcache/Ruby/3.1.4/x64.complete

          # 将 Ruby 添加到 PATH，若不重启 shell，需要手动 source
          echo "/opt/hostedtoolcache/Ruby/3.1.4/x64/bin" >> $GITHUB_PATH

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
